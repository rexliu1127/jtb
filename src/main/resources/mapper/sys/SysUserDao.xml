<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.grx.modules.sys.dao.SysUserDao">
	<select id="queryObject" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select * from sys_user where user_id = #{value}
	</select>

	<select id="queryList" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select u.*, (select d.name from sys_dept d where d.dept_id = u.dept_id) deptName from sys_user u
		<where>
			u.merchant_no = #{_merchantNo}
			<if test="createUserId != null">
				and u.create_user_id = #{createUserId}
			</if>
			<if test="username != null and username.trim() != ''">
				and u.username like concat('%',#{username},'%')
			</if>
			<if test="isChannelUser">
				and u.is_channel_user = 1
			</if>
			<if test="!isChannelUser">
				and u.is_channel_user = 0
			</if>
			<!--  数据过滤  -->
			${filterSql}
		</where>

		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by u.user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from sys_user u
		<where>
			u.merchant_no = #{_merchantNo}
			<if test="createUserId != null">
				and u.create_user_id = #{createUserId}
			</if>
			<if test="username != null and username.trim() != ''">
				and u.username like concat('%',#{username},'%')
			</if>
			<if test="isChannelUser">
				and u.is_channel_user = 1
			</if>
			<if test="!isChannelUser">
				and u.is_channel_user = 0
			</if>
			<!--  数据过滤  -->
			${filterSql}
		</where>
	</select>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur
								LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
								LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

	<!-- 查询用户的所有菜单ID -->
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur
											LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

	<select id="queryByUserName" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>

	<insert id="save" parameterType="io.grx.modules.sys.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`user_id`,
			`merchant_no`,
			`username`,
			`name`,
			`dept_id`,
			`password`,
			`salt`,
			`email`,
			`mobile`,
			`status`,
			`is_channel_user`,
			`create_user_id`,
			`create_time`
		)
		values
		(
			#{userId},
			#{merchantNo},
			#{username},
			#{name},
			#{deptId},
			#{password},
			#{salt},
			#{email},
			#{mobile},
			#{status},
			#{isChannelUser},
			#{createUserId},
			#{createTime}
		)
	</insert>

	<update id="update" parameterType="io.grx.modules.sys.entity.SysUserEntity">
		update sys_user
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
		</set>
		where user_id = #{userId}
		<!--<if test="createUserId != null">-->
		<!--and `create_user_id` = #{createUserId} -->
		<!--</if>-->
	</update>

	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword}
		where user_id = #{userId} and password = #{password}
	</update>

	<delete id="deleteBatch">
		delete from sys_user where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="queryByEmail" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select * from sys_user where email = #{email} limit 1
	</select>


	<select id="queryFreeAuditorList" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select u.* from sys_user u join sys_user_role ur on u.user_id = ur.user_id
		<where>
			u.merchant_no = #{_merchantNo} and ur.role_id = 3 and u.status = 1
			and not exists (select 1 from sys_channel_user where user_id = u.user_id)
			order by u.user_id
		</where>
	</select>

	<select id="isDeptHasUser" resultType="boolean">
		select count(*) from (select 1 from sys_user where dept_id = #{value} limit 1) t;
	</select>

	<select id="querySpecifiedFreeAuditorList" resultType="io.grx.modules.sys.entity.SysUserEntity">
		select u.* from sys_channel_user scu left join sys_user u on scu.user_id=u.user_id
		where scu.channel_id=#{channelId} order by u.user_id

	</select>
</mapper>