<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.grx.modules.tx.dao.TxUserTokenDao">
	<cache />

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.grx.modules.tx.entity.TxUserTokenEntity" id="txUserTokenMap">
        <result property="userId" column="user_id"/>
        <result property="token" column="token"/>
        <result property="expireTime" column="expire_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="io.grx.modules.tx.entity.TxUserTokenEntity">
		select * from tx_user_token where user_id = #{value}
	</select>

	<select id="queryList" resultType="io.grx.modules.tx.entity.TxUserTokenEntity">
		select * from tx_user_token
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by user_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{limit} offset #{offset}
		</if>
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from tx_user_token 
	</select>
	 
	<insert id="save" parameterType="io.grx.modules.tx.entity.TxUserTokenEntity">
		insert into tx_user_token
		(
			user_id, 
			token, 
			expire_time, 
			update_time
		)
		values
		(
			#{userId}, 
			#{token}, 
			#{expireTime}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.grx.modules.tx.entity.TxUserTokenEntity">
		update tx_user_token 
		<set>
			<if test="token != null">token = #{token}, </if>
			<if test="expireTime != null">expire_time = #{expireTime}, </if>
			<if test="updateTime != null">update_time = #{updateTime}</if>
		</set>
		where user_id = #{userId}
	</update>
	
	<delete id="delete">
		delete from tx_user_token where user_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tx_user_token where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="queryByToken" resultType="io.grx.modules.tx.entity.TxUserTokenEntity">
		select * from tx_user_token where token = #{value}
	</select>

	<select id="queryByUser" resultType="io.grx.modules.tx.entity.TxUserTokenEntity">
		select * from tx_user_token where user_id = #{value}
	</select>

</mapper>