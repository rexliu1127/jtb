<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.grx.modules.tx.dao.TxUserInviteDao">

	<select id="queryObject" resultType="io.grx.modules.tx.entity.TxUserInviteEntity">
		select * from tx_user_invite where id = #{value}
	</select>

	<select id="queryList" resultType="io.grx.modules.tx.entity.TxUserInviteEntity">
		select * from tx_user_invite
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{limit} offset #{offset}
		</if>
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from tx_user_invite 
	</select>

	<insert id="save" parameterType="io.grx.modules.tx.entity.TxUserInviteEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tx_user_invite
		(
			merchant_no, 
			user_id, 
			inviter_user_id, 
			inviter_agent_no, 
			create_time
		)
		values
		(
			#{merchantNo}, 
			#{userId}, 
			#{inviterUserId}, 
			#{inviterAgentNo}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.grx.modules.tx.entity.TxUserInviteEntity">
		update tx_user_invite 
		<set>
			<if test="merchantNo != null">merchant_no = #{merchantNo}, </if>
			<if test="userId != null">user_id = #{userId}, </if>
			<if test="inviterUserId != null">inviter_user_id = #{inviterUserId}, </if>
			<if test="inviterAgentNo != null">inviter_agent_no = #{inviterAgentNo}, </if>
			<if test="createTime != null">create_time = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tx_user_invite where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tx_user_invite where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="queryUserInviteList" resultType="io.grx.modules.tx.dto.TxUserInviteVO">
		select left(u.name, 1) name, DATE_FORMAT(u.create_time, '%Y-%m-%d') create_date,
        (select count(1) from tx_base where borrower_user_id = u.user_id and status in (2,3,4)) tx_count
		from tx_user_invite ui join tx_user u on ui.user_id = u.user_id
        <if test="level == 1">
            where ui.inviter_user_id = #{userId}
        </if>
        <if test="level == 2">
            where ui.inviter_user_id in (select user_id from tx_user_invite where inviter_user_id = #{userId})
        </if>
		limit 50
	</select>


	<select id="queryByUseId" resultType="io.grx.modules.tx.entity.TxUserInviteEntity">
		select * from tx_user_invite where user_id = #{userId}
	</select>

	<select id="getTeamUserCount" resultType="int">
        select count(1) from (
        select user_id from tx_user_invite where inviter_user_id = #{userId}
        UNION
        select user_id from tx_user_invite where inviter_user_id in (select user_id from tx_user_invite where inviter_user_id = #{userId})) t
	</select>
</mapper>