<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.grx.modules.auth.dao.AuthMissingRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.grx.modules.auth.entity.AuthMissingRecordEntity" id="authMissingRecordMap">
        <result property="id" column="id"/>
        <result property="verifyToken" column="verify_token"/>
        <result property="mobile" column="mobile"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="io.grx.modules.auth.entity.AuthMissingRecordEntity">
		select * from auth_missing_record where id = #{value}
	</select>

	<select id="queryList" resultType="io.grx.modules.auth.entity.AuthMissingRecordEntity">
		select * from auth_missing_record
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{limit} offset #{offset}
		</if>
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from auth_missing_record 
	</select>
	 
	<insert id="save" parameterType="io.grx.modules.auth.entity.AuthMissingRecordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into auth_missing_record
		(
			verify_token, 
			mobile, 
			status, 
			create_time
		)
		values
		(
			#{verifyToken}, 
			#{mobile}, 
			#{status}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.grx.modules.auth.entity.AuthMissingRecordEntity">
		update auth_missing_record 
		<set>
			<if test="verifyToken != null">verify_token = #{verifyToken}, </if>
			<if test="mobile != null">mobile = #{mobile}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="createTime != null">create_time = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from auth_missing_record where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from auth_missing_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="queryMissingRecords" resultType="io.grx.modules.auth.entity.AuthMissingRecordEntity">
		select mr.* from auth_missing_record mr where status = 0
		and not exists (select 1 from auth_request ar where ar.verify_token = mr.verify_token )
	</select>
</mapper>